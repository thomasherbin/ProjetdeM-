
public class Computer extends Player{
	
	public Computer(int playerNumber) {
		super(playerNumber);
		// TODO Auto-generated constructor stub
	}
	public int getNextMoveIA(Game game) {
		while (true) {
			while (Chests.isEmpty()) {
				if (game.chestTestPosition(playerNumberCave, playerNumberLevel)) {
					return 0;
				} else {
					return 1;
				}
			}
			while (Chests.isEmpty() == false) {
				if (playerNumberCave == 0) {
					playerScore();
					return 1;
				} else {
					return 2;
				}
			}
		}
	}
	public void getNextMove(Game game) {
		int getNextMoveNumber = getNextMoveIA( game);
		switch(getNextMoveNumber) {
		case 0:
			pickChest(game);
			break;
		case 1:
			moveDown(game);
			setypos((Display.getWIN_HEIGHT() * (84 * (Game.getGameNbLevel() - absLvl+2))
					/ (100 * (Game.getGameNbLevel()+2)))
					- Display.getWIN_HEIGHT() * 84 / (200 * (Game.getGameNbLevel()+2)));
			break;
		case 2:
			moveUp(game);
			setypos((Display.getWIN_HEIGHT() * (84 * (Game.getGameNbLevel() - absLvl+2))
					/ (100 * (Game.getGameNbLevel()+2)))
					- Display.getWIN_HEIGHT() * 84 / (200 * (Game.getGameNbLevel()+2)));
			break;
		}
		
	}

}

