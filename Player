import java.awt.event.KeyEvent;
import java.util.ArrayList;

import edu.princeton.cs.introcs.StdDraw;

public abstract class  Player {
	private String name;
	private int TreasureCount;
	private int playerNumber;
	protected int playerNumberCave;
	protected int playerNumberLevel;
	protected ArrayList<Chest> Chests;

	public Player(int playerNumber) {
		super();
		this.playerNumber = playerNumber;
		this.playerNumberCave = 0;
		this.playerNumberLevel = 0;
		this.TreasureCount = 0;
		Chests = new ArrayList<>();
	}

	public Player(String name) {
		super();
		this.name = name;
	}

	public String getName() {
		return name;
	}

	public int getChestsSize() {
		return Chests.size();
	}

	public int getTreasureCount() {
		return TreasureCount;
	}

	public int getPlayerNumber() {
		return playerNumber;
	}

	public int getPlayerNumberCave() {
		return playerNumberCave;
	}

	public int getPlayerNumberLevel() {
		return playerNumberLevel;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setTreasureCount(int treasureCount) {
		TreasureCount = treasureCount;
	}

	public void setPlayerNumber(int playerNumber) {
		this.playerNumber = playerNumber;
	}

	public void setPlayerNumberCave(int playerNumberCave) {
		this.playerNumberCave = playerNumberCave;
	}

	public void setPlayerNumberLevel(int playerNumberLevel) {
		this.playerNumberLevel = playerNumberLevel;
	}
	public abstract void getNextMove(Game game);
	

	

	

	public void moveDown(Game game) {
		if (playerNumberLevel + 1 == game.getCaveNbLevel(playerNumberCave)) {
			playerNumberCave++;
			playerNumberLevel = 0;
		} else {
			playerNumberLevel++;
		}
		System.out.println("Vous descendez.");
		while (StdDraw.isKeyPressed(KeyEvent.VK_DOWN)) {
		}
	}

	public void moveUp(Game game) {
		if (playerNumberLevel == 0) {
			playerNumberCave--;
			playerNumberLevel = game.getCaveNbLevel(playerNumberCave) - 1;
		} else {
			playerNumberLevel--;
		}
		System.out.println("Vous remontez.");
		while (StdDraw.isKeyPressed(KeyEvent.VK_UP)) {
		}
	}

	public void pickChest(Game game) {
		Chests.add(game.getChestCaveLevel(playerNumberCave, playerNumberLevel).get(0));
		game.getChestCaveLevel(playerNumberCave, playerNumberLevel).remove(0);
		System.out.println("Vous prenez un coffre.");
		while (StdDraw.isKeyPressed(KeyEvent.VK_SPACE)) {
		}
	}

	public void putChestsPlayerInLevel(Level level) {
		while (Chests.isEmpty() == false) {
			level.getChests().add(Chests.remove(0));
		}
	}

	public void playerScore() {
		while (Chests.isEmpty() == false) {
			TreasureCount = TreasureCount + Chests.get(0).getTreasure();
			Chests.remove(0);
		}
	}

	public void initPlayer(Game game) {
		if (playerNumberCave == 0 && playerNumberLevel == 0) {
			playerScore();
		} else {
			putChestsPlayerInLevel(game.getCaveLevel(game.getNbCave(), game.getCaveNbLevel(game.getNbCave()) - 1));
			playerNumberCave = 0;
			playerNumberLevel = 0;

		}
	}

	public void playerPrint() {
		int playerNumberPrint = playerNumber + 1;
		if (playerNumberCave == 0 && playerNumberLevel == 0) {
			System.out.println("Le joueur " + playerNumberPrint + " se trouve Ã  la surface.");
		} else {
			System.out.println("Le joueur " + playerNumberPrint + " se trouve dans le niveau " + playerNumberLevel
					+ " de la cave " + playerNumberCave + ".");
		}
	}

	

}
